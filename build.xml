<?xml version="1.0" encoding="UTF-8"?>
<project name="SharesPortfolio" default="default" basedir="."  xmlns:sonar="antlib:org.sonar.ant" xmlns:jacoco="antlib:org.jacoco.ant">
    <description>Builds, tests, and runs the project SharesPortfolio.</description>
    <import file="nbproject/build-impl.xml"/>

    <property name="sonar.host.url" value="http://localhost:9000" />

    <property name="sonar.projectKey" value="gp3" />
    <property name="sonar.projectName" value="Shares Portfolio Group 3" />
    <property name="sonar.projectVersion" value="1.0" />
    <property name="sonar.sources" value="src" />
    <property name="sonar.tests" value="test" />
    <property name="sonar.java.binaries" value="build/classes" />
    <property name="sonar.java.libraries" value="lib/*.jar" />
    <property name="sonar.core.codeCoveragePlugin" value="jacoco" />
    <property name="sonar.jacoco.reportPaths" value="${basedir}/build/jacoco.exec" />

    <target name="sonar"  depends="jacoco">
        <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
            <classpath path="${basedir}/lib/sonarqube-ant-task-2.5.jar" />
        </taskdef>

        <sonar:sonar>

        </sonar:sonar>
    </target>

    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath path="${basedir}/lib/jacocoant.jar"/>
    </taskdef>


    <target name="jacoco" depends="compile-test">
        <delete dir="${basedir}/build/report" />
        <mkdir dir="${basedir}/build/report" />

        <jacoco:coverage destfile="${basedir}/build/jacoco.exec">
            <junit fork="yes" dir="${basedir}" failureProperty="test.failed">
                <classpath location="${build.classes.dir}" />
                <classpath location="${build.test.classes.dir}" />
                <classpath path ="${basedir}/lib/junit-4.10.jar"/>
                <formatter type="xml" />
                <batchtest todir="${basedir}/build/report">
                    <fileset dir="${basedir}/test">
                        <include name="**/**.java" />
                    </fileset>
                </batchtest>
            </junit>
        </jacoco:coverage>
    </target>

    <taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
             classpath="lib/checkstyle-8.17-all.jar"/>

    <target name="checkstyle"
            description="Generates a report of code convention violations.">

        <checkstyle config="${basedir}/lib/sun_checks.xml"
                    failureProperty="checkstyle.failure"
                    failOnViolation="false">
            <formatter type="xml" tofile="build/checkstyle-result.xml"/>
            <fileset dir="src" includes="**/*.java"/>
        </checkstyle>

        <xslt in="build/checkstyle-result.xml" out="build/checkstyle-result.html"
              style="${basedir}/lib/checkstyle.xsl"/>

    </target>

    <taskdef name="findbugs" classpath="lib/findbugs.jar" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
    <property name="findbugs.home" value="${basedir}/lib" />

    <target name="findbugs" depends="-post-jar">
        <findbugs home="${findbugs.home}"
                  output="xml"
                  outputFile="build/findbugsXml.xml" >
            <sourcePath path="${basedir}/src" />
            <class location="${basedir}/dist/SharesPortfolio.jar" />
        </findbugs>
    </target>
</project>
